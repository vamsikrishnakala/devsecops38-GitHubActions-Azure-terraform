name: 'vamsi push Workflow'
on:
  workflow_dispatch:
   inputs:
    TERRAFORM:
      description: 'Shall we Run Terraform Destroy ?'
      required: true
      defautlt: 'PLAN'
      type: choice
      options:
      - PLAN
      - APPLY
      - DESTROY
    ENVIRONMENT:
      description: 'Select which Subscription You Wan to Deploy?'  
      required: true
      default: 'Development'
      type: choice
      options:
      - free_trail
      
env:
  TERRAFORM_DES: "YES"
  ENVIRONMENT: "Development"
#  ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  ACTIONS_STEP_DEBUG: true

jobs:

  varalakshmi:
    name: 'varalakshmi job'
    runs-on : ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: checkout
      uses: actions/checkout@v3    
    - name: print Runner Hostname
      run: hostname
      shell: bash
    - name: print Runner IP address
      run: curl -sL https://ipconfig.io
      shell: bash
    - name: list Repo files
      shell: bash           
      run: |
       ls -al
       pwd
       free      
    - name: Setup Terraform with Specified version on runner
      uses: hashicorp/setup-terraform@v2
      with:
         terraform_version: 1.6.6
    - name: check terraform version
      run: terraform version
      shell: bash  

    - name: Perform Terraform INit Validate Format
      id: init
      shell: bash     
      run: |
       echo ${{github.event.inputs.ENVIRONMENT}}    
       echo ${{github.event.inputs.TERRAFORM_DESTROY}}
       export ARM_SUBSCRIPTION_ID='3cf019f3-f4ce-4a58-9267-7ea16b45d46c'
       terraform init && terraform validate && terraform fmt
    - name: Perform Terraform Plan
      if: steps.init.exit_code == 0 && ${{github.event.inputs.TERRAFORM == 'PLAN'}}
      id: plan
      shell: bash     
      run: |
       export ARM_SUBSCRIPTION_ID='3cf019f3-f4ce-4a58-9267-7ea16b45d46c'
       terraform plan  
#    - name: import varalakshmi rg
#      shell: bash     
#      run: |
#       export ARM_SUBSCRIPTION_ID='3cf019f3-f4ce-4a58-9267-7ea16b45d46c'
#       terraform import azurerm_resource_group.varalakshmi-rg "/subscriptions/3cf019f3-f4ce-4a58-9267-7ea16b45d46c/resourceGroups/varalakshmi-rg"
#
    - name: Perform terraform apply
      if: steps.init.exit_code == 0 && ${{github.event.inputs.TERRAFORM == 'APPLY'}}
      id: apply
      shell: bash     
      run: |
       export ARM_SUBSCRIPTION_ID='3cf019f3-f4ce-4a58-9267-7ea16b45d46c'
       terraform apply --auto-approve    
    - name: List terraform Resources
      if: success()
     
      shell: bash     
      run: |
       export ARM_SUBSCRIPTION_ID='3cf019f3-f4ce-4a58-9267-7ea16b45d46c'
       terraform state list        
              




  vedanshi:
    name: 'vedanshi job'

    runs-on : ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: print Runner Hostname
      run: hostname
      shell: bash
    - name: print Runner IP address
      run: curl -sL https://ipconfig.io
      shell: bash
    - name: Setup Terraform with Specified version on runner
      uses: hashicorp/setup-terraform@v2
      with:
         terraform_version: 1.6.6


  vishwak:
    name: 'vishwak job'
      
    runs-on : ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: print Runner Hostname
      run: hostname
      shell: bash
    - name: print Runner IP address
      run: curl -sL https://ipconfig.io
      shell: bash
    - name: Setup Terraform with Specified version on runner
      uses: hashicorp/setup-terraform@v2
      with:
         terraform_version: 1.6.6

